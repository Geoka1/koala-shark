#!/bin/python3

import os
import subprocess
import time

# Benchmark number
BENCHMARK_NO = "7"

# Base directories
HS_BASE = subprocess.check_output(["git", "rev-parse", "--show-toplevel"]).decode("utf-8").strip()
TEST_BASE = os.path.join(HS_BASE, "report/benchmarks/dgsh", f"{BENCHMARK_NO}-10x")
TEST_UPPER = os.path.join(HS_BASE, "report")
RESOURCE_DIR = os.path.join(HS_BASE, "report/resources/dgsh")
TRY = os.path.join(HS_BASE, "deps/try/try")

# Script to run
SCRIPT_NAME = f"{BENCHMARK_NO}.try.sh"

# Environment variables
os.environ["INPUT_FILE"] = RESOURCE_DIR
os.environ["TRY"] = TRY
os.environ["OUTPUT_DIR"] = os.path.join(HS_BASE, "report/output", SCRIPT_NAME)

# Timing the script
script_path = os.path.join(TEST_BASE, SCRIPT_NAME)
start_time = time.time()

try:
    # Execute the script
    subprocess.run(["bash", script_path], check=True)
    success = True
except subprocess.CalledProcessError as e:
    print(f"Error executing the script: {e}")
    success = False

elapsed_time = time.time() - start_time

# Save the timing to try_time.sh
output_dir = os.environ["OUTPUT_DIR"]
os.makedirs(output_dir, exist_ok=True)  # Ensure the directory exists
timing_file = os.path.join(output_dir, "try_time")

with open(timing_file, "w") as f:
    f.write(f"#!/bin/bash\n")
    f.write(f"# Execution time for {SCRIPT_NAME}\n")
    f.write(f"ELAPSED_TIME={elapsed_time:.6f}\n")
    f.write(f"SUCCESS={success}\n")

print(f"Elapsed time: {elapsed_time:.6f} seconds")
print(f"Timing saved to: {timing_file}")
